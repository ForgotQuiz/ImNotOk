-- Define the notification library
local notificationLibrary = {}

-- Function to create the base notifications
function createBaseNotifications()
    local playerGui = game:GetService("Players").LocalPlayer.PlayerGui
    if playerGui:FindFirstChild("NotificationHolder") then
        return playerGui.NotificationHolder
    end
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "NotificationHolder"
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    -- Toggle Notification Frame
    local ToggleNotif = Instance.new("Frame")
    ToggleNotif.Name = "ToggleNotif"
    ToggleNotif.ZIndex = 5
    ToggleNotif.AnchorPoint = Vector2.new(1, 1)
    ToggleNotif.Visible = false
    ToggleNotif.Size = UDim2.new(0, 291, 0, 56)
    ToggleNotif.Position = UDim2.new(1, 0, 1, 0)
    ToggleNotif.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
    ToggleNotif.Parent = ScreenGui

    local UiCorner = Instance.new("UICorner")
    UiCorner.Parent = ToggleNotif
    
    local Dropshadow = Instance.new("UIStroke")
    Dropshadow.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    Dropshadow.Transparency = 0.8
    Dropshadow.Thickness = 2
    Dropshadow.Color = Color3.fromRGB(20, 20, 20)
    Dropshadow.Parent = ToggleNotif
    
    local SepVertical = Instance.new("Frame")
    SepVertical.Size = UDim2.new(0, 2, 0, 56)
    SepVertical.BackgroundTransparency = 0.5
    SepVertical.Position = UDim2.new(0.7423077, 0, 0, 0)
    SepVertical.BorderSizePixel = 0
    SepVertical.BackgroundColor3 = Color3.fromRGB(68, 68, 68)
    SepVertical.Parent = ToggleNotif
    
    local SepHorizontal = Instance.new("Frame")
    SepHorizontal.Size = UDim2.new(0, 72, 0, 2)
    SepHorizontal.BackgroundTransparency = 0.5
    SepHorizontal.Position = UDim2.new(0.75, 0, 0.4464286, 2)
    SepHorizontal.BorderSizePixel = 0
    SepHorizontal.BackgroundColor3 = Color3.fromRGB(68, 68, 68)
    SepHorizontal.Parent = ToggleNotif
    
    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(0, 216, 0, 19)
    Title.BackgroundTransparency = 1
    Title.BorderSizePixel = 0
    Title.FontSize = Enum.FontSize.Size14
    Title.TextSize = 14
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Font = Enum.Font.SourceSans
    Title.Parent = ToggleNotif
    
    local Paragraph = Instance.new("TextLabel")
    Paragraph.Size = UDim2.new(0, 218, 0, 37)
    Paragraph.BackgroundTransparency = 1
    Paragraph.Position = UDim2.new(0, 0, 0.3392857, 0)
    Paragraph.FontSize = Enum.FontSize.Size14
    Paragraph.TextSize = 14
    Paragraph.TextColor3 = Color3.fromRGB(255, 255, 255)
    Paragraph.TextWrapped = true
    Paragraph.Font = Enum.Font.SourceSans
    Paragraph.TextXAlignment = Enum.TextXAlignment.Left
    Paragraph.TextYAlignment = Enum.TextYAlignment.Top
    Paragraph.Parent = ToggleNotif
    
    local UIPadding = Instance.new("UIPadding")
    UIPadding.PaddingLeft = UDim.new(0, 10)
    UIPadding.PaddingRight = UDim.new(0, 5)
    UIPadding.Parent = Paragraph
    
    local TrueButton = Instance.new("TextButton")
    TrueButton.Name = "True"
    TrueButton.Size = UDim2.new(0, 72, 0, 27)
    TrueButton.BackgroundTransparency = 1
    TrueButton.Position = UDim2.new(0.75, 0, 0, 0)
    TrueButton.FontSize = Enum.FontSize.Size14
    TrueButton.TextSize = 14
    TrueButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TrueButton.Text = "Yes"
    TrueButton.Font = Enum.Font.SourceSans
    TrueButton.Parent = ToggleNotif
    
    local FalseButton = Instance.new("TextButton")
    FalseButton.Name = "False"
    FalseButton.Size = UDim2.new(0, 72, 0, 27)
    FalseButton.BackgroundTransparency = 1
    FalseButton.Position = UDim2.new(0.75, 0, 0.5178571, 0)
    FalseButton.FontSize = Enum.FontSize.Size14
    FalseButton.TextSize = 14
    FalseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    FalseButton.Text = "No"
    FalseButton.Font = Enum.Font.SourceSans
    FalseButton.Parent = ToggleNotif
    
    local DefaultNotif = Instance.new("Frame")
    DefaultNotif.Name = "DefaultNotif"
    DefaultNotif.ZIndex = 5
    DefaultNotif.AnchorPoint = Vector2.new(1, 1)
    DefaultNotif.Visible = false
    DefaultNotif.Size = UDim2.new(0, 291, 0, 56)
    DefaultNotif.Position = UDim2.new(1, 0, 0.9999999, 0)
    DefaultNotif.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
    DefaultNotif.Parent = ScreenGui
    
    local UiCorner1 = Instance.new("UICorner")
    UiCorner1.Parent = DefaultNotif
    
    local Dropshadow1 = Instance.new("UIStroke")
    Dropshadow1.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    Dropshadow1.Transparency = 0.8
    Dropshadow1.Thickness = 2
    Dropshadow1.Color = Color3.fromRGB(20, 20, 20)
    Dropshadow1.Parent = DefaultNotif
    
    local Title1 = Instance.new("TextLabel")
    Title1.Size = UDim2.new(0, 291, 0, 19)
    Title1.BackgroundTransparency = 1
    Title1.FontSize = Enum.FontSize.Size14
    Title1.TextSize = 14
    Title1.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title1.Font = Enum.Font.SourceSans
    Title1.Parent = DefaultNotif
    
    local Paragraph1 = Instance.new("TextLabel")
    Paragraph1.Size = UDim2.new(0, 291, 0, 37)
    Paragraph1.BackgroundTransparency = 1
    Paragraph1.Position = UDim2.new(0, 0, 0.3392857, 0)
    Paragraph1.FontSize = Enum.FontSize.Size14
    Paragraph1.TextSize = 14
    Paragraph1.TextColor3 = Color3.fromRGB(255, 255, 255)
    Paragraph1.TextWrapped = true
    Paragraph1.Font = Enum.Font.SourceSans
    Paragraph1.TextXAlignment = Enum.TextXAlignment.Left
    Paragraph1.TextYAlignment = Enum.TextYAlignment.Top
    Paragraph1.Parent = DefaultNotif
    
    local UIPadding1 = Instance.new("UIPadding")
    UIPadding1.PaddingLeft = UDim.new(0, 10)
    UIPadding1.PaddingRight = UDim.new(0, 5)
    UIPadding1.Parent = Paragraph1
    
    if syn then
        syn.protect_gui(ScreenGui)
    end
    
    ScreenGui.Parent = playerGui
    return ScreenGui
end

local notificationHolder = createBaseNotifications()

local notifAmount = 0
local removedPos = nil

function notificationLibrary:CreatePromptNotif(args)
    args = args or {}
    args.TweenSpeed = args.TweenSpeed or 1
    args.TweenInSpeed = args.TweenInSpeed or args.TweenSpeed
    args.TweenOutSpeed = args.TweenOutSpeed or args.TweenSpeed
    args.TweenVerticalSpeed = args.TweenVerticalSpeed or args.TweenSpeed
    args.Title = args.Title or "Title"
    args.Text = args.Text or "Text"
    args.TrueText = args.TrueText or "Yes"
    args.FalseText = args.FalseText or "No"
    args.Duration = args.Duration or 5
    args.Callback = args.Callback or function() warn("No callback for notif") end
    
    notifAmount = notifAmount + 1
    local track = notifAmount
    local notifNum = notifAmount
    local doesExist = true
    local notif = notificationHolder.ToggleNotif:Clone()
    local removed = false
    notif.Parent = notificationHolder
    notif.Visible = true
    notif.Position = UDim2.new(1, 300, 1, -5)
    notif.Transparency = 0.05
    notif.True.Text = args.TrueText
    notif.False.Text = args.FalseText
    
    task.spawn(function()
        task.wait(args.Duration + args.TweenInSpeed)
        doesExist = false
    end)
    
    notif.True.MouseButton1Click:Connect(function()
        doesExist = false
        removed = true
        notifAmount = notifAmount - 1
        removedPos = notif.Position
        args.Callback(true)
    end)
    
    notif.False.MouseButton1Click:Connect(function()
        doesExist = false
        removed = true
        notifAmount = notifAmount - 1
        removedPos = notif.Position
        args.Callback(false)
    end)
    
    notif.True.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(notif.True, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(180, 180, 180)}):Play()
    end)
    
    notif.True.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(notif.True, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
    end)
    
    notif.False.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(notif.False, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(180, 180, 180)}):Play()
    end)
    
    notif.False.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(notif.False, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
    end)
    
    task.spawn(function()
        game:GetService("TweenService"):Create(notif, TweenInfo.new(args.TweenInSpeed, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Position = UDim2.new(1, -5, 1, -5)}):Play()
        task.wait(args.TweenInSpeed)
        while doesExist do
            for i, v in pairs(notificationHolder:GetChildren()) do
                if i >= track and v ~= notif and v.Name == notif.Name then
                    local newPos = removedPos or UDim2.new(1, -5, 1, -5)
                    game:GetService("TweenService"):Create(v, TweenInfo.new(args.TweenVerticalSpeed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Position = newPos - UDim2.new(0, 0, 0, 65)}):Play()
                    task.wait(0.2)
                end
            end
            task.wait(args.Duration)
        end
        game:GetService("TweenService"):Create(notif, TweenInfo.new(args.TweenOutSpeed, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Position = UDim2.new(1, 300, 1, -5)}):Play()
        task.wait(args.TweenOutSpeed)
        if not removed then
            notifAmount = notifAmount - 1
        end
        notif:Destroy()
    end)
    
    notif.Title.Text = args.Title
    notif.Paragraph.Text = args.Text
end

function notificationLibrary:CreateDefaultNotif(args)
    args = args or {}
    args.TweenSpeed = args.TweenSpeed or 1
    args.TweenInSpeed = args.TweenInSpeed or args.TweenSpeed
    args.TweenOutSpeed = args.TweenSpeed or args.TweenSpeed
    args.TweenVerticalSpeed = args.TweenSpeed or args.TweenSpeed
    args.Title = args.Title or "Title"
    args.Text = args.Text or "Text"
    args.Duration = args.Duration or 5
    args.Callback = args.Callback or function() warn("No callback for notif") end
    
    notifAmount = notifAmount + 1
    local track = notifAmount
    local notifNum = notifAmount
    local doesExist = true
    local notif = notificationHolder.DefaultNotif:Clone()
    local removed = false
    notif.Parent = notificationHolder
    notif.Visible = true
    notif.Position = UDim2.new(1, 300, 1, -5)
    notif.Transparency = 0.05
    
    task.spawn(function()
        task.wait(args.Duration + args.TweenInSpeed)
        doesExist = false
    end)
    
    notif.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            doesExist = false
            removed = true
            notifAmount = notifAmount - 1
            removedPos = notif.Position
        end
    end)
    
    notif.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            game:GetService("TweenService"):Create(notif, TweenInfo.new(0.2), {Transparency = 0.5}):Play()
        end
    end)
    
    notif.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            game:GetService("TweenService"):Create(notif, TweenInfo.new(0.2), {Transparency = 0.05}):Play()
        end
    end)
    
    task.spawn(function()
        game:GetService("TweenService"):Create(notif, TweenInfo.new(args.TweenInSpeed, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Position = UDim2.new(1, -5, 1, -5)}):Play()
        task.wait(args.TweenInSpeed)
        while doesExist do
            for i, v in pairs(notificationHolder:GetChildren()) do
                if i >= track and v ~= notif and v.Name == notif.Name then
                    local newPos = removedPos or UDim2.new(1, -5, 1, -5)
                    game:GetService("TweenService"):Create(v, TweenInfo.new(args.TweenVerticalSpeed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Position = newPos - UDim2.new(0, 0, 0, 65)}):Play()
                    task.wait(0.2)
                end
            end
            task.wait(args.Duration)
        end
        game:GetService("TweenService"):Create(notif, TweenInfo.new(args.TweenOutSpeed, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Position = UDim2.new(1, 300, 1, -5)}):Play()
        task.wait(args.TweenOutSpeed)
        if not removed then
            notifAmount = notifAmount - 1
        end
        notif:Destroy()
    end)
    
    notif.Title.Text = args.Title
    notif.Paragraph.Text = args.Text
end

return notificationLibrary
